#pragma kernel HorzBlurCs
#pragma kernel VertBlurCs

int _BlurRadius;

Texture2D _Source;
RWTexture2D<float4> _VerBlurOutput;
shared RWTexture2D<float4> _HorBlurOutput;

[numthreads(8, 1, 1)]
void HorzBlurCs(uint3 groupThreadID : SV_GroupThreadID, uint3 dispatchThreadId : SV_DispatchThreadID)
{
    const float radius = _BlurRadius;

    const float totalScale = 2.0 * radius + 1.0;
    float4 value = _Source[dispatchThreadId.xy];

    float i = 1.0;
    while (i <= radius)
    {
        const float2 dudv = float2(i, 0);
        value += _Source[dispatchThreadId.xy - dudv] +
            _Source[dispatchThreadId.xy + dudv];

        i += 1.0;
    }

    _HorBlurOutput[dispatchThreadId.xy] = value / totalScale;
}

[numthreads(1, 8, 1)]
void VertBlurCs(uint3 groupThreadID : SV_GroupThreadID, uint3 dispatchThreadId : SV_DispatchThreadID)
{
    const float radius = _BlurRadius;

    const float totalScale = 2.0 * radius + 1.0;
    float4 value = _HorBlurOutput[dispatchThreadId.xy];

    float i = 1.0;
    while (i <= radius)
    {
        float2 dudv = float2(0, i);
        value += _HorBlurOutput[dispatchThreadId.xy - dudv] +
            _HorBlurOutput[dispatchThreadId.xy + dudv];

        i += 1.0;
    }

    _VerBlurOutput[dispatchThreadId.xy] = value / totalScale;
}